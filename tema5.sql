--para ejecutar el script
--@C:\SQL\tema5.sql

--Conexion al sistema
CONNECT SYSTEM/admin;

--Si existe el usuario, eliminar
DROP USER matias CASCADE;

--Creacion del usuario
CREATE USER matias IDENTIFIED BY admin DEFAULT TABLESPACE users TEMPORARY TABLESPACE temp QUOTA UNLIMITED ON users;

--Asignacion de permisos
GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE ANY INDEX, CREATE VIEW, CREATE TRIGGER TO matias;

--desconectar usuario SYSTEM
DISCONNECT;

--Iniciar sesion usuario
CONNECT matias/admin;

--formato fecha
alter session set nls_date_format='dd-mm-yyyy';
--Tabla alumno
CREATE TABLE ALUMNO(
       CODIGO INTEGER,
       CI VARCHAR2(20) NOT NULL,
       PRIMER_NOMBRE VARCHAR2(20) NOT NULL,
       SEGUNDO_NOMBRE VARCHAR2(20),
       PRIMER_APELLIDO VARCHAR2(20) NOT NULL,
       SEGUNDO_APELLIDO VARCHAR2(20),
       FECHA_NACIMIENTO DATE NOT NULL,
       TELEFONO VARCHAR2(15) NOT NULL,
       DIRECCION VARCHAR2(150) NOT NULL,
       EMAIL VARCHAR2(50),
       ESTADO CHAR(1) NOT NULL,
       CONSTRAINT ALUMNO_PK PRIMARY KEY(CODIGO),
       CONSTRAINT ALUMNO_ESTADO CHECK (ESTADO IN('A', 'I'))
);

--secuencia para CODIGO de la tabla ALUMNO
CREATE SEQUENCE SEQ_ALUMNO
       START WITH 1
       INCREMENT BY 1;

--Creando la tabla carrera
CREATE TABLE CARRERA(
       CODIGO INTEGER,
       NOMBRE VARCHAR2(50) NOT NULL,
       FECHA_CREACION DATE NOT NULL,
       NUM_RESOLUCION VARCHAR2(20) NOT NULL,
       DURACION INTEGER NOT NULL,
       ES_ACREDITADA CHAR(1) NOT NULL,
       ESTADO CHAR(1) NOT NULL,
       CONSTRAINT CARRERA_PK PRIMARY KEY(CODIGO),
       CONSTRAINT CARRERA_ESTADO CHECK(ESTADO IN('A', 'C'))
);

--secuencia para CODIGO de la tabla CARRERA
CREATE SEQUENCE SEQ_CARRERA
       START WITH 1
       INCREMENT BY 1;

--creando la tabla ALUMNO_CARRERA
CREATE TABLE ALUMNO_CARRERA(
       COD_ALUMNO INTEGER NOT NULL,
       COD_CARRERA INTEGER NOT NULL,
       FECHA_INGRESO DATE NOT NULL,
       FECHA_EGRESO DATE,
       ESTADO CHAR(1) NOT NULL,
       CONSTRAINT ALUMNO_CARRERA_PK PRIMARY KEY(COD_ALUMNO, COD_CARRERA),
       CONSTRAINT ALUMNO_CARRERA_COD_ALUMNO_FK FOREIGN KEY (COD_ALUMNO) REFERENCES ALUMNO(CODIGO),
       CONSTRAINT ALUMNO_CARRERA_COD_CARRERA_FK FOREIGN KEY (COD_CARRERA) REFERENCES CARRERA(CODIGO),
       CONSTRAINT ALUMNO_CARRERA_ESTADO CHECK(ESTADO IN('T', 'A', 'X', 'C'))
);

--creando la tabla MATERIA
CREATE TABLE MATERIA(
       CODIGO INTEGER,
       NOMBRE VARCHAR2(50) NOT NULL,
       CONSTRAINT MATERIA_PK PRIMARY KEY(CODIGO)
);

--secuencia para CODIGO de la tabla MATERIA
CREATE SEQUENCE SEQ_MATERIA
       START WITH 1
       INCREMENT BY 1;

--creando la tabla carrera_materia
CREATE TABLE CARRERA_MATERIA(
       COD_MATERIA INTEGER NOT NULL,
       COD_CARRERA INTEGER NOT NULL,
       SEMESTRE INTEGER NOT NULL,
       COSTO INTEGER NOT NULL,
       CONSTRAINT CARRERA_MATERIA_PK PRIMARY KEY (COD_MATERIA, COD_CARRERA),
       CONSTRAINT CARRERA_MATERIA_COD_MATERIA_FK FOREIGN KEY (COD_MATERIA) REFERENCES MATERIA(CODIGO),
       CONSTRAINT CARRERA_MATERIA_COD_CARRERA_FK FOREIGN KEY (COD_CARRERA) REFERENCES CARRERA(CODIGO),
       CONSTRAINT CARRERA_SEMESTRE CHECK(SEMESTRE BETWEEN 1 AND 10)
);

--Creando la tabla matriculacion
CREATE TABLE MATRICULACION(
       COD_ALUMNO INTEGER NOT NULL,
       COD_MATERIA INTEGER NOT NULL,
       ANHO INTEGER NOT NULL,
       NUM_SEMESTRE INTEGER NOT NULL,
       FECHA_MATRIC DATE NOT NULL,
       SITUACION CHAR(1) NOT NULL,
       CONSTRAINT MATRICULACION_PK PRIMARY KEY(COD_ALUMNO, COD_MATERIA, ANHO, NUM_SEMESTRE),
       CONSTRAINT MATRICULACION_COD_ALUMNO_FK FOREIGN KEY(COD_ALUMNO) REFERENCES ALUMNO(CODIGO),
       CONSTRAINT MATRICULACION_COD_MATERIA_FK FOREIGN KEY(COD_MATERIA) REFERENCES MATERIA(CODIGO),
       CONSTRAINT MATRICULACION_NUM_SEMESTRE CHECK(NUM_SEMESTRE BETWEEN 1 AND 2),
       CONSTRAINT MATRICULACION_SITUACION CHECK(SITUACION IN('C', 'X', 'A'))
);

------------------------------------------1.2-----------------------------------
-- a) El campo CI de la tabla alumno debe ser único, no debe admitir duplicaciones.
ALTER TABLE ALUMNO
ADD UNIQUE (CI);

-- b)Tabla Matriculación: Agregue el campo calificación cuyo tipo de dato es Int,
-- no debe admitir valores nulos y asumir por defecto el valor 0.
ALTER TABLE MATRICULACION
ADD (
    CALIFICACION INTEGER DEFAULT 0 NOT NULL
    );

-- c) Tabla Carrera_Materia, la columna costo debe ser mayor a cero.
ALTER TABLE CARRERA_MATERIA
ADD CONSTRAINT CARRERA_MATERIA_COSTO CHECK(COSTO > 0);

-- d) Ampliar la capacidad del campo dirección de la tabla alumno a 200 caracteres.
ALTER TABLE ALUMNO
MODIFY DIRECCION VARCHAR(200);

-- e) El campo 'Es_acreditada' de la tabla Carrera sólo puede tomar los valores S o N
ALTER TABLE CARRERA
ADD (
    CONSTRAINT CARRERA_ES_ACREDITADA CHECK(ES_ACREDITADA IN('S', 'N'))
    );

-- y debe asumir por defecto N.
ALTER TABLE CARRERA
MODIFY (
       ES_ACREDITADA DEFAULT 'N'
);

-- f) Al insertar registros en la tabla matriculación, la columna ‘fecha_matric’ debe asumir por defecto la fecha del sistema.
CREATE OR REPLACE TRIGGER MATRIC_FECHA_MATRIC_TRIG
BEFORE INSERT ON MATRICULACION
FOR EACH ROW
BEGIN
    :NEW.FECHA_MATRIC := SYSDATE;
END;
/

-- g) El campo calificación de la tabla matriculación sólo puede tomar valores que estén entre 0 y 5.
ALTER TABLE MATRICULACION
ADD CONSTRAINT MATRICULACION_CALIFICACION CHECK(CALIFICACION BETWEEN 0 AND 5);

--Inicio código de inserción

@.\INSERT_ACADEMICO.sql

--Fin código de inserción

--Tema 2

--2.1
--Inserción de la carrera de Ingeniería en Informática
INSERT INTO CARRERA(CODIGO, NOMBRE, FECHA_CREACION, NUM_RESOLUCION, DURACION, ESTADO)
VALUES(SEQ_CARRERA.nextval,'ING. EN INFORMATICA','30/09/2018','022-003-2018',10,'A');

--Inserción de las materias del primer y segundo semestre
--Semestre I IIN
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'FUNDAMENTOS DE MATEMATICA');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'MATEMATICA DISCRETA');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'ORGANIZACION Y ARQUITECTURA DE COMPUTADORAS I');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'ALGORITMOS Y ESTRUCTURA DE DATOS I');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'EXPRESION ORAL Y ESCRITA');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'EMPRENDEDORISMO');

INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (55,4,1,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (56,4,1,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (57,4,1,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (58,4,1,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (59,4,1,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (60,4,1,25000);

--Semestre II IIN
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'ALEGBRA LINEAL');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'ORGANIZACION Y ARQUITECTURA DE COMPUTADORAS II');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'LENGUAJES DE PROGRAMACION I');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'ALGORITMOS Y ESTRUCTURA DE DATOS II');
INSERT INTO MATERIA (CODIGO, NOMBRE) VALUES(SEQ_MATERIA.NEXTVAL, 'INGLES');

INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (61,4,2,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (62,4,2,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (63,4,2,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (64,4,2,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (65,4,2,25000);
INSERT INTO CARRERA_MATERIA(COD_MATERIA,COD_CARRERA,SEMESTRE,COSTO) VALUES (1,4,2,25000);